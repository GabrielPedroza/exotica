import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import type { Session } from "next-auth";
import { useSession } from "next-auth/react";
import TimeLine from "./components/TimeLineFeed";
import Navbar from "./components/Navbar";
import { getSession } from "next-auth/react";
import React from "react";
import { parseFilterArgs } from "@tanstack/react-query";
import { type TimelineOptions } from "../utils/timelineOptions";
import Post from "./components/Post";
import TimeLineFeed from "./components/TimeLineFeed";

const Home: NextPage = () => {
  const { data: session } = useSession();
  if (!session) return null;

  const options: TimelineOptions = {
    filters: {
      author: {
        isNot: {
          id: session.user!.id,
        },
      },
    },
    sort: "asc",
    limit: 5,
  };

  return (
    <>
      <Head>
        <title>DeadEnd Devs</title>
        <meta name="description" content="Generated by Gabriel Pedroza" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <Navbar />
        <div className="ml-auto flex w-full flex-col rounded-l-md bg-slate-600 text-center">
          <Post />
          <TimeLineFeed options={options} />
        </div>
      </div>
    </>
  );
};

export default Home;

export const getServerSideProps: GetServerSideProps = async (context) => {
  const session = await getSession(context);
  if (!session) {
    return {
      redirect: {
        destination: "/login",
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
};
